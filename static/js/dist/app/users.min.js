let users=[];const save=id=>{if($("#password").val()!==$("#confirm_password").val()){modalError("Senhas não são iguais");return}let user={username:$("#username").val(),password:$("#password").val(),role:$("#role").val(),password_change_required:$("#force_password_change_checkbox").prop("checked"),account_locked:$("#account_locked_checkbox").prop("checked")};if(id!=-1){user.id=id;api.userId.put(user).success(data=>{successFlash("Conta de "+escapeHtml(user.username)+" atualizado com sucesso");load();dismiss();$("#modal").modal("hide")}).error(data=>{modalError(data.responseJSON.message)})}else{api.users.post(user).success(data=>{successFlash("Usuário "+escapeHtml(user.username)+" registrado com sucesso");load();dismiss();$("#modal").modal("hide")}).error(data=>{modalError(data.responseJSON.message)})}};const dismiss=()=>{$("#username").val("");$("#password").val("");$("#confirm_password").val("");$("#role").val("");$("#force_password_change_checkbox").prop("checked",true);$("#account_locked_checkbox").prop("checked",false);$("#modal\\.flashes").empty()};const edit=id=>{$("#username").attr("disabled",false);$("#modalSubmit").unbind("click").click(()=>{save(id)});$("#role").select2();if(id==-1){$("#userModalLabel").text("Novo Usuário");$("#role").val("user");$("#role").trigger("change")}else{$("#userModalLabel").text("Editar Usuário");api.userId.get(id).success(user=>{$("#username").val(user.username);$("#role").val(user.role.slug);$("#role").trigger("change");$("#force_password_change_checkbox").prop("checked",user.password_change_required);$("#account_locked_checkbox").prop("checked",user.account_locked);if(user.username=="admin"){$("#username").attr("disabled",true)}}).error(function(){errorFlash("Error fetching user")})}};const deleteUser=id=>{var user=users.find(x=>x.id==id);if(!user){return}if(user.username=="admin"){Swal.fire({title:"Não foi possível deletar o usuário",text:"A conta do usuário "+escapeHtml(user.username)+" não pode ser deletada.",type:"info"});return}Swal.fire({title:"Você tem certeza?",text:"A conta de "+escapeHtml(user.username)+", assim como todos seus os objetos criados serão deletados permanentemente.",type:"warning",animation:false,showCancelButton:true,confirmButtonText:"Deletar",confirmButtonColor:"#428bca",reverseButtons:true,allowOutsideClick:false,preConfirm:function(){return new Promise((resolve,reject)=>{api.userId.delete(id).success(msg=>{resolve()}).error(data=>{reject(data.responseJSON.message)})}).catch(error=>{Swal.showValidationMessage(error)})}}).then(function(result){if(result.value){Swal.fire("Conta deletada","A conta do usuário "+escapeHtml(user.username)+" e todos os objetos associados foram deletados.","success")}$('button:contains("OK")').on("click",function(){location.reload()})})};const impersonate=id=>{var user=users.find(x=>x.id==id);if(!user){return}Swal.fire({title:"Você tem certeza?",html:"Você saíra da sua conta e entrará como logado como <strong>"+escapeHtml(user.username)+"</strong>",type:"warning",animation:false,showCancelButton:true,confirmButtonText:"Trocar com usuário",confirmButtonColor:"#428bca",reverseButtons:true,allowOutsideClick:false}).then(result=>{if(result.value){fetch("/impersonate",{method:"post",body:"username="+user.username+"&csrf_token="+encodeURIComponent(csrf_token),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(response=>{if(response.status==200){Swal.fire({title:"Success!",html:"Trocou com o usuário <strong>"+escapeHtml(user.username)+"</strong> com sucesso.",type:"success",showCancelButton:false,confirmButtonText:"Voltar",allowOutsideClick:false}).then(result=>{if(result.value){window.location.href="/"}})}else{Swal.fire({title:"Erro!",type:"error",html:"Falha ao trocar com o usuário <strong>"+escapeHtml(user.username)+"</strong>.",showCancelButton:false})}})}})};const load=()=>{$("#userTable").hide();$("#loading").show();api.users.get().success(us=>{users=us;$("#loading").hide();$("#userTable").show();let userTable=$("#userTable").DataTable({destroy:true,columnDefs:[{orderable:false,targets:"no-sort"}]});userTable.clear();userRows=[];$.each(users,(i,user)=>{lastlogin="";if(user.last_login!="0001-01-01T00:00:00Z"){lastlogin=moment(user.last_login).format("MMMM Do YYYY, h:mm:ss a")}userRows.push([escapeHtml(user.username),escapeHtml(user.role.name),lastlogin,"<div class='pull-right'>                    <button class='btn btn-warning impersonate_button' data-user-id='"+user.id+"'>                    <i class='fa fa-retweet'></i>                    </button>                    <button class='btn btn-primary edit_button' data-toggle='modal' data-backdrop='static' data-target='#modal' data-user-id='"+user.id+"'>                    <i class='fa fa-pencil'></i>                    </button>                    <button class='btn btn-danger delete_button' data-user-id='"+user.id+"'>                    <i class='fa fa-trash-o'></i>                    </button></div>"])});userTable.rows.add(userRows).draw()}).error(()=>{errorFlash("Error fetching users")})};$(document).ready(function(){load();$("#modal").on("hide.bs.modal",function(){dismiss()});$.fn.select2.defaults.set("width","100%");$.fn.select2.defaults.set("dropdownParent",$("#role-select"));$.fn.select2.defaults.set("theme","bootstrap");$.fn.select2.defaults.set("sorter",function(data){return data.sort(function(a,b){if(a.text.toLowerCase()>b.text.toLowerCase()){return 1}if(a.text.toLowerCase()<b.text.toLowerCase()){return-1}return 0})});$("#new_button").on("click",function(){edit(-1)});$("#userTable").on("click",".edit_button",function(e){edit($(this).attr("data-user-id"))});$("#userTable").on("click",".delete_button",function(e){deleteUser($(this).attr("data-user-id"))});$("#userTable").on("click",".impersonate_button",function(e){impersonate($(this).attr("data-user-id"))})});
